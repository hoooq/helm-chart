name: HelmRelease

on:
  pull_request:
    branches:
      - main

jobs:
  helm-release:
    runs-on: ubuntu-latest    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Update repository
      id: update-repository
      run: |
        curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash -

        export CURRENT_BRANCH=${{ github.head_ref }}

        sed -i "s/^version:.*$/version: $CURRENT_BRANCH/" hoooq/helm-chart/Chart.yaml

        echo "Current branch: $CURRENT_BRANCH"
        helm package hoooq/*
        helm repo index --url https://hoooq.github.io/helm-chart .
        cat index.yaml
        git config --local user.email "action@github.com"
        git config --local user.name "Deploy action"
        git add .
        git commit -m "Update helm charts"
        git push origin HEAD:$CURRENT_BRANCH --force
                
    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.update-repository.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Terraform Format and Style')
            })
            
            const output = `#### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
           
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Version: \`${{ github.head_ref }}\`*`;
            
            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }